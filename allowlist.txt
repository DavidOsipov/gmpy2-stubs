# allowlist.txt for gmpy2-stubs version 2.2.1.5

# --- Runtime Signature Mismatches ---

# The runtime incorrectly reports the signature for __rpow__ as accepting
# a 'mod' argument (def (self, value, mod=None, /)), similar to __pow__.
# However, Python's reverse power mechanism (__rpow__) never uses the
# third 'mod' argument. The stubs correctly omit 'mod' for __rpow__.
gmpy2.mpc.__rpow__
gmpy2.mpfr.__rpow__
gmpy2.mpq.__rpow__
gmpy2.mpz.__rpow__
gmpy2.xmpz.__rpow__

# --- Undocumented/Internal Symbols ---

# These symbols are present in the runtime gmpy2 module but are not
# part of the documented public API in version 2.2.1. Stubs focus on
# the documented API. Including them here prevents stub checker errors
# for symbols users shouldn't typically rely on directly.

# 'numer' and 'denom' exist as properties on mpq/mpz/xmpz, but these
# function-like entries likely correspond to internal accessors or
# older/deprecated ways of access not in the current documentation.
gmpy2.gmpy2.denom
gmpy2.gmpy2.numer

# These functions appear related to older gmpy versions or internal binary formats
# and are not documented for current use.
gmpy2.gmpy2.mpq_from_old_binary
gmpy2.gmpy2.mpz_from_old_binary

# These functions are not found in the 2.2.1 documentation.
gmpy2.gmpy2.is_lessgreater
gmpy2.gmpy2.xbit_mask

# Note: The prefix 'gmpy2.gmpy2.*' might appear if the stub checker was
# previously confused by an extra gmpy2.pyi file. Consolidating stubs
# into __init__.pyi is the primary fix, but these are allowlisted
# for robustness against potential checker quirks or internal symbols.